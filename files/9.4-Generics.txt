interface IPost {
    title: string;
    id: number;
    description: string;
};

interface IUser {
    id: number;
    name: string;
    age: number;
};

const fetchPostData = async (path: string): Promise<IPost[]> => {
    const response = await fetch(`http://example.com/${path}`);
    return response.json();
}

const fetchUsersData = async (path: string): Promise<IUser[]> => {
    const response = await fetch(`http://example.com/${path}`);
    return response.json();
}

const fetchData = async <ResultType>(path: string): Promise<ResultType> => {
    const response = await fetch(`http://example.com/${path}`);
    return response.json();
}

(async () => {
    // const posts = await fetchPostData('/posts');
    // const users = await fetchUsersData('/users');

    // const users = await fetchData<IUser[]>('/users');
    const posts = await fetchData<IPost[]>('/users');
    posts[0];
})();