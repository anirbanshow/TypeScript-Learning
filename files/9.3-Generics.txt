interface HasAge {
    age: number;
}

// function getOldest(people: HasAge[]): HasAge {
//     return people.sort((a, b) => b.age - a.age)[0];
// }

function getOldest<T extends HasAge>(people: T[]): T {
    return people.sort((a, b) => b.age - a.age)[0];
}

const people: HasAge[] = [{ age: 30 }, { age: 40 }, { age: 10 }];

interface Player {
    name: string;
    age: number;
}

const players: Player[] = [
    { name: "John", age: 30 },
    { name: "Jane", age: 35 },
    { name: "Joe", age: 30 }
];

// Assertion
// const person = getOldest(players) as Player;

// Generics
const person = getOldest(players);
person.name;
person.age;
// const person = getOldest(people);
// person.age;